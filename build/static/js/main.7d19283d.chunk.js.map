{"version":3,"sources":["redux/actions.js","components/editCategory.jsx","components/addCategory.jsx","components/home.jsx","components/list.jsx","redux/reducer.js","redux/store.js","components/viewCategory.jsx","components/App.jsx","index.jsx"],"names":["ADD_CATEGORY","EDIT_CATEGORY","DELETE_CATEGORY","GET_CATEGORIES","SELECT_CATEGORY","editCategory","category","type","payload","EditCategory","props","state","categories","find","id","selectedCategory","handleChange","bind","save","event","this","name","target","value","setState","history","push","className","InputLabel","htmlFor","Input","onChange","Button","disabled","onClick","React","Component","connect","AddCategory","length","addCategory","Home","deleteCategory","AppBar","position","Toolbar","to","withRouter","CategoriesList","selectCategory","listItems","map","index","ListItem","button","ListItemText","primary","List","updateCategoriesData","localStorage","setItem","JSON","stringify","initialState","parse","getItem","localCategories","rootReducer","action","concat","i","filter","forEach","cat","store","createStore","App","path","component","ViewCategory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d19283d.chunk.js","sourcesContent":["export const ADD_CATEGORY = \"ADD_CATEGORY\";\r\n// export const READ = \"fetch all items\";\r\nexport const EDIT_CATEGORY = \"EDIT_CATEGORY\";\r\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\r\nexport const SELECT_CATEGORY = \"SELECT_CATEGORY\";\r\n\r\nexport const addCategory = (category) => ({\r\n  type: ADD_CATEGORY,\r\n  payload:  category \r\n})\r\n\r\nexport const editCategory = (category) => ({\r\n  type: EDIT_CATEGORY,\r\n  payload: {category }\r\n})\r\n\r\nexport const deleteCategory = (id) => ({\r\n  type : DELETE_CATEGORY,\r\n  payload : { id }\r\n})\r\n\r\nexport const getCategories = () => ({\r\n    type : GET_CATEGORIES\r\n  })\r\n\r\n  export const selectCategory = (id) => ({\r\n    type : SELECT_CATEGORY,\r\n    payload : { id }\r\n  })","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Input, InputLabel } from '@material-ui/core';\r\nimport { editCategory } from '../redux/actions'\r\nconst mapStateToProps = (state) => ({\r\n    categories: state.categories,\r\n    selectedCategory: state.selectedCategory\r\n});\r\nclass EditCategory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { category: this.props.categories.find(category => category.id == this.props.selectedCategory) };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.save = this.save.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        let category = this.state.category;\r\n        category.name = event.target.value;\r\n        this.setState({ category: category });\r\n    }\r\n    save() {\r\n        this.props.editCategory(this.state.category);\r\n        this.props.history.push('/list');\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"component-wrapper\">\r\n                <InputLabel htmlFor=\"name\">Name</InputLabel>\r\n                <Input id=\"name\" value={this.state.category.name} onChange={this.handleChange} />\r\n                <Button disabled={!this.state.category.name} onClick={this.save}>Save</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { editCategory })(EditCategory)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Input, InputLabel } from '@material-ui/core';\r\nimport { addCategory } from '../redux/actions'\r\nconst mapStateToProps = (state) => ({\r\n  categories: state.categories,\r\n  selectedCategory: state.selectedCategory\r\n});\r\nclass AddCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { category: { id: this.props.categories.length + 1, name: '' } };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.addCategory = this.addCategory.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    let category = this.state.category;\r\n    category.name = event.target.value;\r\n    this.setState({ category: category });\r\n  }\r\n  addCategory() {\r\n    this.props.addCategory(this.state.category);\r\n    this.props.history.push('/list');\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"component-wrapper\">\r\n        <InputLabel htmlFor=\"name\">Name</InputLabel>\r\n        <Input id=\"name\" value={this.state.category.name} onChange={this.handleChange} />\r\n        <Button disabled={!this.state.category.name} onClick={this.addCategory}>Save</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { addCategory })(AddCategory)","import React from 'react';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport { Route, Link ,withRouter} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { deleteCategory } from '../redux/actions';\r\nconst mapStateToProps = (state) => ({\r\n    selectedCategory: state.selectedCategory,\r\n});\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteCategory = this.deleteCategory.bind(this);\r\n    }\r\n    deleteCategory() {\r\n        this.props.deleteCategory(this.props.selectedCategory);\r\n        this.props.history.push('/list');\r\n    }\r\n    render() {\r\n        return (\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Route> \r\n                        <Link to='/list'><Button className=\"menu-item\">Categories List</Button></Link>\r\n                        <Link to='/add'><Button className=\"menu-item\"> Add Category</Button></Link>\r\n                        {this.props.selectedCategory &&(<Link to='/edit'><Button className=\"menu-item\"> Edit</Button></Link>)}\r\n                        {this.props.selectedCategory && (<Link to='/view'><Button className=\"menu-item\" >View</Button></Link>)}\r\n                        {this.props.selectedCategory && (<Button className=\"menu-item\" onClick={this.deleteCategory}>Delete</Button>)}\r\n                    </Route>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\nexport default withRouter (connect(mapStateToProps, { deleteCategory })(Home))","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectCategory } from '../redux/actions';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nconst mapStateToProps = (state) => ({\r\n    categories: state.categories,\r\n    selectedCategory: state.selectedCategory\r\n});\r\n\r\nclass CategoriesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        this.props.selectCategory(null);\r\n    }\r\n    render() {\r\n        const listItems = this.props.categories.map((category, index) =>\r\n            <ListItem  key={index} className={this.props.selectedCategory == category.id ? 'highlight': ''} button onClick={() => this.props.selectCategory(category.id)}> <ListItemText primary={category.name} /></ListItem>\r\n        );\r\n        return (\r\n            <List>{listItems}</List>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { selectCategory })(CategoriesList);","import { ADD_CATEGORY, EDIT_CATEGORY, DELETE_CATEGORY, GET_CATEGORIES, SELECT_CATEGORY } from \"./actions\";\r\n\r\nfunction updateCategoriesData(categories) {\r\n  localStorage.setItem('categories', JSON.stringify(categories)); \r\n}\r\nupdateCategoriesData([{ id: 1, name: \"Category1\" }, {id: 2, name: \"Category2\" }, {id: 3, name: \"Category3\" }]);\r\n\r\nconst initialState = {\r\n  categories: JSON.parse(localStorage.getItem('categories')),\r\n  selectedCategory: null\r\n};\r\nvar localCategories = {};\r\n\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type) {    \r\n      case GET_CATEGORIES:    \r\n          return {    \r\n              ...state    \r\n          };    \r\n      case ADD_CATEGORY:\r\n        localCategories = state.categories.concat(action.payload);\r\n        updateCategoriesData(localCategories);    \r\n          return {    \r\n              ...state,    \r\n              categories: localCategories  \r\n          };    \r\n      case EDIT_CATEGORY:\r\n        localCategories =  state.categories.map(    \r\n          (category, i) => category.id === action.payload.category.id ? {...category, name : action.payload.category.name }    \r\n                                  : category);\r\n          updateCategoriesData(localCategories);      \r\n          return {    \r\n              ...state,    \r\n              categories: localCategories\r\n          };    \r\n      case DELETE_CATEGORY:\r\n        localCategories =  state.categories.filter(category => category.id !== action.payload.id);\r\n        localCategories.forEach((cat, index) => {\r\n          cat.id = index + 1;\r\n        });\r\n        updateCategoriesData(localCategories); \r\n          return {    \r\n              ...state,    \r\n              categories: localCategories\r\n          };   \r\n      case SELECT_CATEGORY:    \r\n      return {    \r\n          ...state,    \r\n          selectedCategory: action.payload.id\r\n      };  \r\n      default:    \r\n          return state;    \r\n  }    \r\n\r\n}\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;   ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editCategory } from '../redux/actions';\r\nimport {  InputLabel, Input } from '@material-ui/core';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    categories: state.categories,\r\n    selectedCategory: state.selectedCategory\r\n});\r\nclass EditCategory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"component-wrapper\">\r\n                <InputLabel htmlFor=\"name\">Name</InputLabel>\r\n                <Input id=\"name\" disabled value={this.props.categories.find(cat => cat.id == this.props.selectedCategory).name} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { editCategory })(EditCategory)","\nimport React from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport EditCategory from './editCategory';\nimport AddCategory from './addCategory';\nimport Home from './home';\nimport CategoriesList from './list';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\nimport ViewCategory from './viewCategory';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <div>\n          <Home />\n          <Route path=\"/\">\n            <Redirect to=\"/list\" />\n          </Route>\n          <Route path=\"/list\" component={CategoriesList} />\n          <Route path=\"/edit\" component={EditCategory} />\n          <Route path=\"/view\" component={ViewCategory} />\n          <Route path=\"/add\" component={AddCategory} />\n          <Switch>\n          </Switch>\n        </div>\n      </Provider>);\n  }\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}